apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: pipeline-ms-k8s
spec:
  params:
    - name: pipeline-pvc
      description: the pipeline pvc name
    - name: repository
      description: the git repo
    - name: branch
      description: the branch for the git repo
  resources:
  - name: app-image
    type: image
  - name: target-cluster
    type: cluster
  tasks:
    - name: pipeline-1-clone-task
      taskRef:
        name: clone-repo-task
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: repository
          value: $(params.repository)
        - name: branch
          value: $(params.branch)
    - name: pipeline-2-containerize-task
      runAfter: [pipeline-1-clone-task]
      taskRef:
        name: containerize-task
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: additionalTags
          value: '1.0.0-dev'
        - name: additionalTagsScript
          value: |
            # Include the clone task output variables in the environment
            source /artifacts/build.properties
            # The script is providing tag(s) as output
            # But logs can be written as error stderr
            echo "Providing an image tag including git branch and commit" >&2
            # Add a specific tag with branch and commit
            echo "1.0.0-${GIT_BRANCH}-${GIT_COMMIT}"
      resources:          
        outputs:
          - name: builtImage
            resource: app-image
    - name: pipeline-3-va-task
      taskRef:
        name: vulnerability-advisor-task
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: scanReportFile
          value: 'app-image-va-report.json'
        # - name: maxIteration
        #   value: '5'
        # - name: sleepTime
        #   value: '3'
        # - name: failOnScannedIssues          
        #   value: 'false'
      resources:          
        inputs:
          - name: image
            resource: app-image
            from:
              - pipeline-2-containerize-task
    - name: pipeline-4-cluster-setup-task
      taskRef:
        name: fetch-iks-cluster-config
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: clusterPipelineResourcesDirectoryFallback
          value: .tekton-clusters
      resources:          
        inputs:
          - name: cluster
            resource: target-cluster
        outputs:
          - name: cluster
            resource: target-cluster
    - name: pipeline-5-k8s-deployment-validation
      runAfter: [pipeline-3-va-task]
      taskRef:
        name: validate-k8s-deployment-file
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
      resources:          
        inputs:
          - name: image
            resource: app-image
            from:
              - pipeline-2-containerize-task
    - name: pipeline-6-kubectl-deployment
      runAfter: [pipeline-5-k8s-deployment-validation]
      taskRef:
        name: kubernetes-contextual-execution
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: task-pvc-mountpath
          value: /pipelinerun
        - name: clusterPipelineResourcesDirectory
          value: /pipelinerun/.tekton-clusters
        - name: script
          value: |
            echo "** Here is the kubectl version:"
            kubectl version
            echo "** Here is the kubectl cluster-info:"
            kubectl cluster-info
            echo "** Here are the kubectl namespaces:"
            kubectl get namespaces
      resources:          
        inputs:
          - name: cluster
            resource: target-cluster
            from:
              - pipeline-4-cluster-setup-task
